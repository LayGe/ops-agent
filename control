#!/bin/bash

WORKSPACE=$(cd $(dirname $0)/; pwd)
cd $WORKSPACE

module=ops_agent
app=$module

conf=ops_agent.yml
pidfile=ops_agent.pid
watchpid=watch.pid
logfile=logs/$app.log

function check_pid() {
    if [[ -f $pidfile ]];then
        pid=`cat $pidfile`
        if [[ -n $pid ]]; then
            running=`ps -p $pid|grep -v "PID TTY" |wc -l`
            return $running
        fi
    fi
    return 0
}

function status() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo started
    else
        echo stoped
    fi
}

function build() {
    echo "build with GOOS=$1"
	  if [[ "$1" == "linux" ]]; then
		    export GOOS=linux
	  elif [[ "$1" == "windows" ]]; then
		    export GOOS=windows
	  elif [[ "$1" == "darwin" ]]; then
		    export GOOS=darwin
    fi

    go build -o $app ${WORKSPACE}/cmd/agent/main.go
    if [[ $? -ne 0 ]]; then
        exit $?
    fi
}

#启动服务
function start() {
    check_pid
    running=$?
    if [[ $running -gt 0 ]]; then
        echo -n "$app now is running already, pid="
        cat $pidfile
        return 1
    fi
    if ! [[ -f $conf ]]; then
        echo "config file $conf doesn't exist, creating one."
        cp cfg.example.yml $conf
    fi

    chmod ugo+x ./$app
    nohup ./$app -c $conf -s start >> $logfile 2>&1 &
    sleep 2
    running=$(ps -p $! | grep -v "PID TTY" | wc -l)

    if [[ $running -gt 0 ]];then
        echo $! > $pidfile
        echo "$app started..., pid=$!"
    else
        echo "$app failed to start."
        return 1

    fi

    daemon_running=$(ps aux | grep agent_daemon | grep grep -v | wc -l)
    if [[ $daemon_running -gt 0 ]];then
        echo "agent_daemon is running"
    else
        nohup sh agent_daemon >> /dev/null 2>&1 &
        echo $! > $watchpid
        echo "agent_daemon started."
    fi
}

#停止服务
function stop() {
    pid=$(cat $pidfile)
    watchid=$(cat $watchpid)
    kill $pid
    kill $watchid
    rm -f $pidfile $watchpid
    echo "$app stopped..."
}

#重启服务
function restart() {
    stop
    sleep 1
    start
}

function help() {
    echo "$0 build|start|stop|restart|status"
}

if [[ "$1" == "" ]]; then
    help
elif [[ "$1" == "stop" ]];then
    stop
elif [[ "$1" == "start" ]];then
    start $2
elif [[ "$1" == "restart" ]];then
    restart
elif [[ "$1" == "status" ]];then
    status
elif [ "$1" == "build" ];then
    build $2
else
    help
fi